server {
    listen 80;
    server_name www.jerkhome.cl jerkhome.cl;

    # Redireccionar HTTP a HTTPS
    return 301 https://www.jerkhome.cl$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.jerkhome.cl;

    ssl_certificate /etc/letsencrypt/live/www.jerkhome.cl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.jerkhome.cl/privkey.pem;

    # Configuración SSL
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Configuración del proxy para el frontend
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Configuración del proxy para la API
    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Servir imágenes estáticas
    location /imagenes/ {
        alias /var/www/imagenes_jhk/;
        # Configuración de caché para imágenes
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Permitir acceso a las imágenes
        autoindex on;
        
        # Configuración de tipos MIME
        types {
            image/jpeg jpg jpeg;
            image/png png;
            image/gif gif;
            image/svg+xml svg svgz;
            image/webp webp;
        }
    }
}
